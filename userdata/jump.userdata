#cloud-config

packages:
  - python-dev
  - libffi-dev
  - gcc
  - libssl-dev
  - python-selinux
  - python-setuptools
  - python-pip
  - docker.io


write_files:
  - content: |
      #!/bin/bash
      #
      # networking
      #
      ifaceFirstName=`ip -o link show | awk -F': ' '{print $2}' | head -2 | tail -1`
      macFirst=`ip -o link show | awk -F'link/ether ' '{print $2}' | awk -F' ' '{print $1}' | head -2 | tail -1`
      ifaceLastName=`ip -o link show | awk -F': ' '{print $2}' | tail -1`
      macLast=`ip -o link show | awk -F'link/ether ' '{print $2}' | awk -F' ' '{print $1}'| tail -1`
      cp ${netplanFile} ${netplanFile}.old
      echo "network:" | sudo tee ${netplanFile}
      echo "    ethernets:" | sudo tee -a ${netplanFile}
      echo "        $ifaceFirstName:" | sudo tee -a ${netplanFile}
      echo "            dhcp4: true" | sudo tee -a ${netplanFile}
      echo "            match:" | sudo tee -a ${netplanFile}
      echo "                macaddress: $macFirst" | sudo tee -a ${netplanFile}
      echo "            set-name: $ifaceFirstName" | sudo tee -a ${netplanFile}
      echo "        $ifaceLastName:" | sudo tee -a ${netplanFile}
      echo "            dhcp4: false" | sudo tee -a ${netplanFile}
      echo "            addresses: [${ipCidrData}]" | sudo tee -a ${netplanFile}
      echo "            match:" | sudo tee -a ${netplanFile}
      echo "                macaddress: $macLast" | sudo tee -a ${netplanFile}
      echo "            set-name: $ifaceLastName" | sudo tee -a ${netplanFile}
      echo "    version: 2" | sudo tee -a ${netplanFile}
      sudo netplan apply
      sleep 10
      #
      # iptables section
      #
      sudo iptables -A INPUT -i lo -j ACCEPT
      sudo iptables -A OUTPUT -o lo -j ACCEPT
      sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
      sudo iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT
      sudo iptables -A FORWARD -i $ifaceLastName -o $ifaceFirstName -j ACCEPT
      sudo iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
      sudo iptables -A OUTPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j ACCEPT
      sudo iptables -t nat -A POSTROUTING -o $ifaceFirstName -j MASQUERADE
      sudo ufw --force enable
      #
      # pip
      #
      sudo pip install -U pip
      pip install netaddr dnspython ansible==${ansibleVersion} avisdk==${avisdkVersion} python-openstackclient openstacksdk future python-neutronclient kolla-ansible
      #
      # ansible and dynamic openstack inventory
      #
      sudo -u ${username} ansible-galaxy install -f avinetworks.avisdk
      sudo mkdir -p /etc/ansible
      sudo tee /etc/ansible/ansible.cfg > /dev/null <<EOT
      [defaults]
      private_key_file = /home/${username}/.ssh/${basename(privateKey)}
      host_key_checking = False
      forks=100
      EOT
      wget ${osInventoryUrl} -O /home/${username}/openstack_inventory.py
      sudo chown ${username}:${username} /home/${username}/openstack_inventory.py
      chmod u+x /home/${username}/openstack_inventory.py
      #
      # kolla
      #
      sudo mkdir -p /etc/kolla
      sudo chown ${username}:${username} /etc/kolla
      cp -r /usr/local/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
      sudo chown ${username}:${username} /etc/kolla/*
      cp /usr/local/share/kolla-ansible/ansible/inventory/* /home/${username}/
      sudo chown ${username}:${username} /home/${username}/*
      /usr/local/bin/kolla-genpwd
      #
      # docker
      #
      sudo usermod -a -G docker ${username}
      su - ${username}
      ping www.google.com -c 1
      ping foo -c 1
      while [ $? -ne 0 ] ; do docker login --username ${docker_registry_username} --password ${docker_registry_password} ; sleep 5 ; done
      #docker search kolla | grep ${distro} | sed 's/\s.*$//' | tee /home/${username}/list.txt
      #cat /home/${username}/list.txt | while read line ; do docker image pull $line:${openStackVersion} ; done
      echo "cloud init done" | tee /tmp/cloudInitDone.log
    path: /opt/bootstrap.sh
    permissions: 0755

  - content: |
      ubuntu ALL=(ALL) NOPASSWD:ALL
    path: /etc/sudoers.d/ubuntu

runcmd:
  - /opt/bootstrap.sh