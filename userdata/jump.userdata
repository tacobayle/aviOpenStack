#cloud-config

packages:
  - python-dev
  - libffi-dev
  - gcc
  - libssl-dev
  - python-selinux
  - python-setuptools
  - python-pip
  - docker.io


write_files:
  - content: |
      #!/bin/bash
      ifaceFirstName=`ip -o link show | awk -F': ' '{print $2}' | head -2 | tail -1`
      macFirst=`ip -o link show | awk -F'link/ether ' '{print $2}' | awk -F' ' '{print $1}' | head -2 | tail -1`
      ifaceLastName=`ip -o link show | awk -F': ' '{print $2}' | tail -1`
      macLast=`ip -o link show | awk -F'link/ether ' '{print $2}' | awk -F' ' '{print $1}'| tail -1`
      cp ${netplanFile} ${netplanFile}.old
      echo "network:" | sudo tee ${netplanFile}
      echo "    ethernets:" | sudo tee -a ${netplanFile}
      echo "        $ifaceFirstName:" | sudo tee -a ${netplanFile}
      echo "            dhcp4: true" | sudo tee -a ${netplanFile}
      echo "            match:" | sudo tee -a ${netplanFile}
      echo "                macaddress: $macFirst" | sudo tee -a ${netplanFile}
      echo "            set-name: $ifaceFirstName" | sudo tee -a ${netplanFile}
      echo "        $ifaceLastName:" | sudo tee -a ${netplanFile}
      echo "            dhcp4: true" | sudo tee -a ${netplanFile}
      echo "            match:" | sudo tee -a ${netplanFile}
      echo "                macaddress: $macLast" | sudo tee -a ${netplanFile}
      echo "            set-name: $ifaceLastName" | sudo tee -a ${netplanFile}
      echo "    version: 2" | sudo tee -a ${netplanFile}
      sudo netplan apply
      sleep 10
      sudo pip install -U pip
      pip install netaddr
      pip install dnspython
      pip install ansible==${ansibleVersion}
      pip install avisdk==${avisdkVersion}
      pip install python-openstackclient
      pip install openstacksdk
      pip install future
      pip install python-neutronclient
      sudo -u ubuntu ansible-galaxy install -f avinetworks.avisdk
      sudo mkdir -p /etc/ansible
      sudo tee /etc/ansible/ansible.cfg > /dev/null <<EOT
      [defaults]
      private_key_file = /home/${username}/.ssh/${basename(privateKey)}
      host_key_checking = False
      forks=100
      EOT
      pip install kolla-ansible
      sudo mkdir -p /etc/kolla
      sudo chown ${username}:${username} /etc/kolla
      cp -r /usr/local/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
      sudo chown ${username}:${username} /etc/kolla/*
      cp /usr/local/share/kolla-ansible/ansible/inventory/* /home/${username}/
      sudo chown ${username}:${username} /home/${username}/*
      /usr/local/bin/kolla-genpwd
      sudo usermod -a -G docker ${username}
      su - ${username}
      sleep 2
      docker login --username ${docker_registry_username} --password ${docker_registry_password}
      sleep 2
      docker search kolla | grep ${distro} | sed 's/\s.*$//' | tee /home/${username}/list.txt
      cat /home/${username}/list.txt | while read line ; do docker image pull $line:${openStackVersion} ; done
      echo "cloud init done" | tee /tmp/cloudInitDone.log
    path: /opt/bootstrap.sh
    permissions: 0755

  - content: |
      ubuntu ALL=(ALL) NOPASSWD:ALL
    path: /etc/sudoers.d/ubuntu

runcmd:
  - /opt/bootstrap.sh